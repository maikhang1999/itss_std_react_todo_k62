[{"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Todo.js":"4","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Input.js":"5","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"6","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Filter.js":"7","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\hooks\\storage.js":"8","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\lib\\util.js":"9","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\lib\\firebase.js":"10","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\login.js":"11","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Upload.js":"12"},{"size":517,"mtime":1621584445637,"results":"13","hashOfConfig":"14"},{"size":1667,"mtime":1621588088851,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1621584445637,"results":"16","hashOfConfig":"14"},{"size":2028,"mtime":1621585363563,"results":"17","hashOfConfig":"14"},{"size":917,"mtime":1621584445622,"results":"18","hashOfConfig":"14"},{"size":676,"mtime":1621584445637,"results":"19","hashOfConfig":"14"},{"size":1304,"mtime":1621584445622,"results":"20","hashOfConfig":"14"},{"size":1442,"mtime":1621589134614,"results":"21","hashOfConfig":"14"},{"size":68,"mtime":1621584445637,"results":"22","hashOfConfig":"14"},{"size":1681,"mtime":1621589099581,"results":"23","hashOfConfig":"14"},{"size":366,"mtime":1621588760052,"results":"24","hashOfConfig":"14"},{"size":1830,"mtime":1621586254532,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"4qf3ne",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\index.js",[],["54","55"],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Todo.js",["56"],"import React, { useState, useEffect } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n　・key：Todoを特定するID（String）\r\n　・text：Todoの内容（String）\r\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/storage';\r\n\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  const [items, addItem, updateItem, clearItems] = useStorage(); \r\n  const [filterItems, setFilterItems] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    setFilterItems(items);\r\n  }, [items]);\r\n  \r\n  const handleOnItemClick = (newItem) => {\r\n    updateItem(newItem)\r\n  }\r\n  \r\n  const handleOnEnterInput = (newItem) => {\r\n    addItem(newItem);\r\n  }\r\n  \r\n  const handleOnFilterClick = (element) => {\r\n    if (element.text === \"未完了\") {\r\n      setFilterItems(items.filter((item) => item.done === false));\r\n    }\r\n    else if (element.text === \"完了済み\") {\r\n      setFilterItems(items.filter((item) => item.done === true));\r\n    }\r\n    else {\r\n      setFilterItems(items);\r\n    }\r\n  }\r\n  \r\n  const handleDeleteItems = () => {\r\n    clearItems();\r\n  }\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"panel-heading\">\r\n        ITSS ToDoアプリ\r\n      </div>\r\n      <Input onEnterInput={handleOnEnterInput} />\r\n      <Filter onFilterClick={handleOnFilterClick} />\r\n      {filterItems.map(item => (\r\n        <TodoItem \r\n          key={item.key}\r\n          item={item} \r\n          onItemClick={handleOnItemClick} \r\n        />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {filterItems.length} items\r\n      </div>\r\n      <div className=\"panel-delete has-text-centered\">\r\n        <button className=\"button is-danger\" onClick={handleDeleteItems}>\r\n          全てのTodoを削除\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Input.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Filter.js",["57"],"import { useState } from 'react';\r\n/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({ onFilterClick }) {\r\n  const [filterElements, setFilterElements] = useState([\r\n    { id: 1, text: '全て', isActive: true },\r\n    { id: 2, text: '未完了', isActive: false },\r\n    { id: 3, text: '完了済み', isActive: false },\r\n  ])\r\n  \r\n  const handleFilterClick = (element) => {\r\n    let newItems = [];\r\n    \r\n    for (const item of filterElements) {\r\n      if (item.id === element.id) {\r\n        item.isActive = true;\r\n      }\r\n      else {\r\n        item.isActive = false;\r\n      }\r\n      newItems.push(item);\r\n    }\r\n    \r\n    setFilterElements(newItems)\r\n    \r\n    onFilterClick(element)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      { \r\n        filterElements.map((element, key) => (\r\n          <a \r\n            href=\"#\" \r\n            key={key} \r\n            onClick={() => handleFilterClick(element)}\r\n            className={element.isActive ? 'is-active' : ''}\r\n          >\r\n            {element.text}\r\n          </a>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\hooks\\storage.js",["58","59","60"],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\lib\\firebase.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\login.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Upload.js",["61"],"import React, { useState } from 'react'\r\n\r\n /* ライブラリ */\r\n import { uploadImage } from \"../lib/firebase\";\r\n\r\n function Upload({ userImage, onSletctedImage }) {\r\n   const [isModal, setIsModal] = useState(false);\r\n   const active = isModal ? \"is-active\" : \"\";\r\n   const [imageUrl, setImageUrl] = useState(userImage);\r\n\r\n   const handleImage = async event => {\r\n     const image = event.target.files[0];\r\n     const imageUrl = await uploadImage(image);\r\n     onSletctedImage(imageUrl);\r\n     setImageUrl(imageUrl);\r\n   };\r\n\r\n   const handleClick = () => {\r\n     setIsModal(!isModal);\r\n   };\r\n\r\n   const ImageViewer = () => {\r\n     if (!imageUrl) {\r\n       return <i class=\"fas fa-user\"></i>\r\n     } else {\r\n       return (\r\n         <div>\r\n           <img src={imageUrl} />\r\n         </div>\r\n       )\r\n     }\r\n   }\r\n\r\n   return (\r\n     <div className=\"App\">\r\n       <div className={`modal ${active}`}>\r\n         <div class=\"modal-background\"></div>\r\n         <div class=\"modal-content\">\r\n           <div class=\"file is-boxed\" >\r\n             <label class=\"file-label\">\r\n               <input class=\"file-input\" type=\"file\" name=\"resume\" onChange={handleImage} />\r\n               <span class=\"file-cta\">\r\n                 <span class=\"file-icon\">\r\n                   <i class=\"fas fa-upload\"></i>\r\n                 </span>\r\n                 <span class=\"file-label\">画像を選択してください</span>\r\n               </span>\r\n             </label>\r\n           </div>\r\n           <button class=\"modal-close is-large\" aria-label=\"close\" onClick={handleClick}></button>\r\n         </div>\r\n       </div>\r\n       <button onClick={handleClick} class=\"button is-primary is-inverted\">\r\n         <span class=\"icon\">\r\n           <ImageViewer />\r\n         </span>\r\n       </button>\r\n     </div>\r\n   );\r\n }\r\n\r\n export default Upload",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":19,"column":9,"nodeType":"68","messageId":"69","endLine":19,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":37,"column":11,"nodeType":"72","endLine":42,"endColumn":12},{"ruleId":"73","severity":1,"message":"74","line":12,"column":11,"nodeType":"75","messageId":"76","endLine":12,"endColumn":23},{"ruleId":"66","severity":1,"message":"77","line":12,"column":11,"nodeType":"78","messageId":"69","endLine":12,"endColumn":23},{"ruleId":"66","severity":1,"message":"79","line":21,"column":11,"nodeType":"68","messageId":"69","endLine":21,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":28,"column":12,"nodeType":"72","endLine":28,"endColumn":34},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'getKey' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'localStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","'localStorage' is defined but never used.","Program","'savedItems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]