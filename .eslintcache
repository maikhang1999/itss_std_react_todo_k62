[{"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Todo.js":"4","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Input.js":"5","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"6","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Filter.js":"7","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\hooks\\storage.js":"8","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\lib\\util.js":"9","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\lib\\firebase.js":"10","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\login.js":"11"},{"size":517,"mtime":1621584445637,"results":"12","hashOfConfig":"13"},{"size":1435,"mtime":1621587192006,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1621584445637,"results":"15","hashOfConfig":"13"},{"size":2028,"mtime":1621585363563,"results":"16","hashOfConfig":"13"},{"size":917,"mtime":1621584445622,"results":"17","hashOfConfig":"13"},{"size":676,"mtime":1621584445637,"results":"18","hashOfConfig":"13"},{"size":1304,"mtime":1621584445622,"results":"19","hashOfConfig":"13"},{"size":1442,"mtime":1621587303553,"results":"20","hashOfConfig":"13"},{"size":68,"mtime":1621584445637,"results":"21","hashOfConfig":"13"},{"size":1392,"mtime":1621587325276,"results":"22","hashOfConfig":"13"},{"size":364,"mtime":1621587347517,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"4qf3ne",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\index.js",[],["50","51"],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Todo.js",["52"],"import React, { useState, useEffect } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n　・key：Todoを特定するID（String）\r\n　・text：Todoの内容（String）\r\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/storage';\r\n\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  const [items, addItem, updateItem, clearItems] = useStorage(); \r\n  const [filterItems, setFilterItems] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    setFilterItems(items);\r\n  }, [items]);\r\n  \r\n  const handleOnItemClick = (newItem) => {\r\n    updateItem(newItem)\r\n  }\r\n  \r\n  const handleOnEnterInput = (newItem) => {\r\n    addItem(newItem);\r\n  }\r\n  \r\n  const handleOnFilterClick = (element) => {\r\n    if (element.text === \"未完了\") {\r\n      setFilterItems(items.filter((item) => item.done === false));\r\n    }\r\n    else if (element.text === \"完了済み\") {\r\n      setFilterItems(items.filter((item) => item.done === true));\r\n    }\r\n    else {\r\n      setFilterItems(items);\r\n    }\r\n  }\r\n  \r\n  const handleDeleteItems = () => {\r\n    clearItems();\r\n  }\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"panel-heading\">\r\n        ITSS ToDoアプリ\r\n      </div>\r\n      <Input onEnterInput={handleOnEnterInput} />\r\n      <Filter onFilterClick={handleOnFilterClick} />\r\n      {filterItems.map(item => (\r\n        <TodoItem \r\n          key={item.key}\r\n          item={item} \r\n          onItemClick={handleOnItemClick} \r\n        />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {filterItems.length} items\r\n      </div>\r\n      <div className=\"panel-delete has-text-centered\">\r\n        <button className=\"button is-danger\" onClick={handleDeleteItems}>\r\n          全てのTodoを削除\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Input.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\Filter.js",["53"],"import { useState } from 'react';\r\n/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({ onFilterClick }) {\r\n  const [filterElements, setFilterElements] = useState([\r\n    { id: 1, text: '全て', isActive: true },\r\n    { id: 2, text: '未完了', isActive: false },\r\n    { id: 3, text: '完了済み', isActive: false },\r\n  ])\r\n  \r\n  const handleFilterClick = (element) => {\r\n    let newItems = [];\r\n    \r\n    for (const item of filterElements) {\r\n      if (item.id === element.id) {\r\n        item.isActive = true;\r\n      }\r\n      else {\r\n        item.isActive = false;\r\n      }\r\n      newItems.push(item);\r\n    }\r\n    \r\n    setFilterElements(newItems)\r\n    \r\n    onFilterClick(element)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      { \r\n        filterElements.map((element, key) => (\r\n          <a \r\n            href=\"#\" \r\n            key={key} \r\n            onClick={() => handleFilterClick(element)}\r\n            className={element.isActive ? 'is-active' : ''}\r\n          >\r\n            {element.text}\r\n          </a>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\hooks\\storage.js",["54","55","56"],"import { useState, useEffect } from 'react';\r\nimport db from '../lib/firebase';\r\n/* \r\n  【Storageフック】\r\n　・TodoをlocalStorageを使って保存する\r\n　・以下機能をサポートする\r\n　  - localstrageに保存されているすべてのTodoの読み出し機能\r\n　  - Todoをlocalstrageに保存する\r\n　  - localstrageにあるTodoを削除する\r\n*/\r\n\r\n/* global localStorage */\r\n\r\nconst STORAGE_KEY = 'todos';\r\n\r\nfunction useStorage() {\r\n  const [items, setItems] = useState([]);\r\n　\r\n　/* 副作用を使う */\r\n  useEffect(() => {\r\n    const savedItems = [];\r\n\r\n    db.collection(STORAGE_KEY).onSnapshot(snapshot => {\r\n      setItems(snapshot.docs.map(doc => ({\r\n        key: doc.id,\r\n        text: doc.data().text,\r\n        done: doc.data().done,\r\n      })));\r\n    });\r\n  }, []);\r\n  const addItem = async item => {\r\n    await db.collection(STORAGE_KEY).add({\r\n      text: item,\r\n      done: false,\r\n    });\r\n  }\r\n\r\n  const updateItem = async item => {\r\n    const updatedItem = db.collection(STORAGE_KEY).doc(item.key);\r\n    await updatedItem.update({\r\n      done: !item.done,\r\n    });\r\n  };\r\n  const clearItems = async () => {\r\n    const allItems = await db.collection(STORAGE_KEY).get();\r\n    const batch = db.batch();\r\n    allItems.forEach(item => {\r\n      batch.delete(item.ref);\r\n    });\r\n    await batch.commit();\r\n  }\r\n  return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useStorage;","C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\lib\\firebase.js",[],"C:\\Users\\DELL\\Desktop\\itss_std_react_todo_k62\\src\\components\\login.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":19,"column":9,"nodeType":"63","messageId":"64","endLine":19,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":37,"column":11,"nodeType":"67","endLine":42,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":12,"column":11,"nodeType":"70","messageId":"71","endLine":12,"endColumn":23},{"ruleId":"61","severity":1,"message":"72","line":12,"column":11,"nodeType":"73","messageId":"64","endLine":12,"endColumn":23},{"ruleId":"61","severity":1,"message":"74","line":21,"column":11,"nodeType":"63","messageId":"64","endLine":21,"endColumn":21},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'getKey' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'localStorage' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","'localStorage' is defined but never used.","Program","'savedItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]